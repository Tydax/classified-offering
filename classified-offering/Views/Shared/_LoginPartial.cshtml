@using classified_offering.Models
@{ User connectedUser = (User) HttpContext.Current.Session["ConnectedUser"]; }
@if (connectedUser != null)
{
    using (Html.BeginForm("SignOut", "Users", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
    @Html.AntiForgeryToken()

    <ul class="nav navbar-nav navbar-right">
        <li>
            @Html.ActionLink("Bonjour " + connectedUser.Pseudo + " !", "Details", "Users", new { id = connectedUser.ID })
        </li>
        <li><a href="javascript:document.getElementById('logoutForm').submit()">Se déconnecter</a></li>
    </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("S’inscrire", "SignUp", "Users", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Se connecter", "SignIn", "Users", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
